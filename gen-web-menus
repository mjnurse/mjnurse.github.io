#!/bin/bash
help_text="
NAME
  bm - One line description.

USAGE
  bm [options] <parameters>

OPTIONS
  -x
    Description...

  -h|--help
    Show help text.

DESCRIPTION
  Description description description description.

AUTHOR
  mjnurse.dev - 2020
"
help_line="Generates website menu pages"

gh_home="/c/Users/MartinNurse/OneDrive - Quantexa Ltd/MJN/github"

base_url="https://mjnurse.github.io"
base_dir="$gh_home/mjnurse-github-io"

cd "$base_dir"
# Start the Front page
echo --- > index.md
{ echo "title: mjnurse.dev"; 
  echo "layout: front"; 
  echo "---"; } >> index.md

echo "Some stuff that interests me or made me smile.  The scripts I write." \
     " GCP, Hadoop, Oracle, SQL, Python, PostgreSQL, Scala, AHK." \
     " OK, I'm a geek - an *Entrprenerd*. Only good is good enough. " \
     " \"I'll format it later\" - no you won't - find a new job." >> index.md

echo "<hr>" >> index.md

echo "<a href=\"{{ site.url }}\"><b>MJN</b></a>" > _includes/menu-bar.html

sed '/### NAV KEY MAPPINGS/q' assets/javascript/navigation.js > assets/javascript/nav.js

echo "<div class=\"row\">" >> index.md

# Start the ALL page
all_page="${base_dir}/All-A/index.md"
echo --- > "$all_page"
{ echo "title: All Content"; 
  echo "---"; } >> "$all_page"

((l1_num = 1))
((all_num = 0))

# LOOP THROUGH TOP LEVEL FOLDERS
# ------------------------------

for l1_dir in */; do

   if [[ "$l1_dir" != "*/" && "$l1_dir" != _layouts/ && "$l1_dir" != assets/ && \
         "$l1_dir" != _includes/ && "$l1_dir" != images/ &&  "$l1_dir" != attatchments/ && \
         "$l1_dir" != Search/ && "$l1_dir" != "Hide/" ]]; then

      echo "$l1_num - $l1_dir"

      n=$(echo "$l1_dir" | sed "s/\///g; s/-.$//; s/_/ /g; s/\.md//")

      # Add links to the front page
      # echo >> index.md
      # echo "<p><span style=\"color: grey\">$l1_num.</span>" \
      #      "&nbsp;&nbsp;&nbsp;<a id=\"listitem$l1_num\" " \
      #      "href=\"/${l1_dir}\">${n}</a></p>" >> index.md

      # Add links to the all page
      echo >> "$all_page"
      echo "<span style=\"color: grey\">$all_num.</span>&nbsp;&nbsp;&nbsp;" \
           "<a id=\"listitem$all_num\" href=\"$base_url/${l1_dir}\">${n}</a>" \
         | sed "s/All-A\///" >> "$all_page"
      ((all_num = all_num + 1))

      # Add link to the menu bar
      char=$(echo "$l1_dir" | sed "s/.*-//; s/\///g")
      name=$(echo "$l1_dir" | sed "s/\///g; s/${char}/<b>${char}<\/b>/; s/-.//; s/_/ /g")
      echo "<a href=\"/${l1_dir}\">$name</a>" >> _includes/menu-bar.html

      # Add  key press to navigate javascript
      echo "case \"Key$char\": window.location.assign( \"/${l1_dir}\" ); break;" \
         >> assets/javascript/nav.js

      # MOVE INTO TOP LEVEL FOLDER
      # --------------------------
      cd "$l1_dir" || exit

      #  Start the top level folder index page
      echo --- > index.md
      { echo "title: ${n//_/ }";
        echo "---"; } >> index.md

      # Add the folder description if the corresponding file exists
      if [[ -f folder_desc.md ]]; then
        echo "" >> index.md
        cat folder_desc.md >> index.md
        echo "<hr>" >> index.md
        echo "" >> index.md
      fi

      ((l2_num = 1))

      # LOOP THROUGH CHILD FOLDERS/
      # --------------------------
      for l2_dir in */; do

         if [[ "$l2_dir" != "*/" && $l2_dir != images/ && "$l2_dir" != attatchments/ ]]; then

            echo "   $l2_dir"
            n=$(echo "$l2_dir" | sed "s/\///g; s/_/ /g; s/\.md//")

            # Add child folder link to the top level folder index
            echo >> index.md
            echo "<span style=\"color: grey\">$l2_num.</span>&nbsp;&nbsp;&nbsp;" \
                 "<b><a id=\"listitem$l2_num\" href=\"/${l1_dir}${l2_dir}\">$n</a></b>" >> index.md

            # Add child folder link to the all folder index
            echo >> "$all_page"
            echo "<span style=\"color: grey\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" \
                 "$all_num.</span>&nbsp;&nbsp;" \
                 "&nbsp;<a id=\"listitem$all_num\" href=\"/${l1_dir}${l2_dir}\">$n</a>" \
                 | sed "s/All-A\///" >> "$all_page"

            ((all_num = all_num + 1))

            # MOVE INTO 2ND LEVEL FOLDER
            # --------------------------

            cd "$l2_dir" || exit
            echo --- > index.md
            { echo "title: ${n//_/ }";
              echo "---"; } >> index.md

            # Add the folder description if the corresponding file exists
            if [[ -f folder_desc.md ]]; then
              echo "" >> index.md
              cat folder_desc.md >> index.md
              echo "<hr>" >> index.md
              echo "" >> index.md
            fi

            ((l3_num = 1))
            scripts=n
            for file in $(ls *.md | sed "/folder_desc.*/d; s/^Script/zzzScript/" | \
                          sort -f | sed "s/^zzz//"); do
               if [[ ${file:0:7} == "Script_" && $scripts == n ]]; then
                  echo >> index.md
                  echo "## Scripts" >> index.md
                  echo >> index.md
                  scripts=y
               fi
               if [[ $file != index.md ]]; then
                  n=$(echo "$file" | sed "s/\///g; s/_/ /g; s/\.md//; s/^Script //")
                  echo >> index.md
                  echo "<span style=\"color: grey\">$l3_num.</span>&nbsp;&nbsp;" \
                     "&nbsp;<a id=\"listitem$l3_num\" href=\"${file/.md/.html}\">$n</a>" >> index.md
                  ((l3_num = l3_num + 1))
               fi
            done
            echo "<script>gMaxNum=${l3_num}-1</script>" >> index.md
            echo "      - $l3_num pages"
            cd ..
            ((l2_num = l2_num + 1))
         fi
      done

      rev=""
      scripts=n
      if [[ "$l1_dir" =~ Blog.* ]]; then
        rev="-r"
      fi
      for file in $(ls *.md | sed "/folder_desc.*/d; s/^Script/zzzScript/" | \
                    sort -f $rev | sed "s/^zzz//"); do
         if [[ ${file:0:7} == "Script_" && $scripts == n ]]; then
            echo >> index.md
            echo "## Scripts" >> index.md
            echo >> index.md
            scripts=y
         fi
         if [[ $file != index.md ]]; then
            n=$(echo "$file" | sed "s/\///g; s/_/ /g; s/\.md//; s/^Script //")
            echo >> index.md
            echo "<span style=\"color: grey\">$l2_num.</span>&nbsp;&nbsp;&nbsp;" \
                 "<a id=\"listitem$l2_num\" href=\"${file/.md/.html}\">$n</a>" >> index.md
            ((l2_num = l2_num + 1))
         fi
      done
      echo "<script>gMaxNum=${l2_num}-1</script>" >> index.md

      echo "   - $l2_num pages"
      cd ..
   fi
done

# Continue building the front page.

for file in $(ls tile*); do
echo "<div class=\"tile\">" >> index.md
   cat $file | sed "
     1s/^/<a class=\"tilelink\" id=\"listitem${l1_num}\" href=\"\//; 
     1s/^/<img src=\"images\/Star.png\" width=\"20px\">/;
     1s/$/\">/; 2s/$/<\/a>\&nbsp;/;
     2s/$/<span style=\"color: #AAAAAA\">(${l1_num})<\/span><br>/;
   " >> index.md
   ((l1_num = l1_num + 1))
echo "</div>" >> index.md
done

echo "</div>" >> index.md

echo "<hr>" >> index.md

let num_blogs=10
for file in $(ls Blog-B/*.md | sort -f -r ); do
  if [[ $file != Blog-B/index.md ]]; then
    text=$(echo "$file" | sed "s/\///g; s/_/ /g; s/\.md//; s/^Blog-B//")
    title=$(echo "$text" | sed "s/^[^ ]* - //" )
    dte=$(echo "$text" | sed "s/ .*//" )

    echo "<p class=\"bloglist\"><img src=\"images\/Dot.png\" width=\"15px\">" \
         "$dte - " \
         "<a class=\"bloglistlink\" id=\"listitem$l1_num\" href=\"${file/.md/.html}\">$title</a>" \
         "<span style=\"color: grey\">($l1_num)</span></p>" \
      >> index.md

    ((l1_num = l1_num + 1))
    ((num_blogs = num_blogs - 1))
  fi
  if [[ $num_blogs == 0 ]]; then
    break;
  fi
done

echo "<p><a href=\"Blog-B\">More</a></p>" >> index.md

echo "<script>gMaxNum=${l1_num}-1</script>" >> index.md
echo "<script>gMaxNum=${all_num}-1</script>" >> "$all_page"

echo "<a href=\"/Search/index.html\"><b>/</b> - Search</a>" >> _includes/menu-bar.html

sed -e '1,/### NAV KEY MAPPINGS/ d' assets/javascript/navigation.js >> assets/javascript/nav.js
